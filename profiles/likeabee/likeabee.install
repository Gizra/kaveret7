<?php



/**
 * implements hook_install_tasks for the installation profile
 */
function likeabee_install_tasks() {
  $tasks = array(
    'likeabee_content_types' => array(
      'display_name' => st('Import fields')
    ),
    'likeabee_import_fields' => array(
      'display_name' => st('Import fields')
    ),
    'likeabee_import_instances' => array(
      'display_name' => st('Import fields')
    ),
    'likeabee_import_blocks' => array(
      'display_name' => st('Import fields')
    ),
    'likeabee_import_variables' => array(
      'display_name' => st('Import fields')
    ),
    'likeabee_misc_setup' => array(
      'display_name' => st('Finalise')
    )
  );
  return $tasks;
}


function likeabee_import_fields() {

field_create_field(array(
  'entity_types' => array(
    'og_membership',
  ),
  'translatable' => '0',
  'settings' => array(),
  'storage' => array(
    'type' => 'field_sql_storage',
    'settings' => array(),
    'module' => 'field_sql_storage',
    'active' => '1',
    'details' => array(
      'sql' => array(
        'FIELD_LOAD_CURRENT' => array(
          'field_data_og_membership_request' => array(
            'value' => 'og_membership_request_value',
            'format' => 'og_membership_request_format',
          ),
        ),
        'FIELD_LOAD_REVISION' => array(
          'field_revision_og_membership_request' => array(
            'value' => 'og_membership_request_value',
            'format' => 'og_membership_request_format',
          ),
        ),
      ),
    ),
  ),
  'foreign keys' => array(
    'format' => array(
      'table' => 'filter_format',
      'columns' => array(
        'format' => 'format',
      ),
    ),
  ),
  'indexes' => array(
    'format' => array(
      'format',
    ),
  ),
  'field_name' => 'og_membership_request',
  'type' => 'text_long',
  'module' => 'text',
  'active' => '1',
  'locked' => '0',
  'cardinality' => '1',
  'deleted' => '0',
  'columns' => array(
    'value' => array(
      'type' => 'text',
      'size' => 'big',
      'not null' => FALSE,
    ),
    'format' => array(
      'type' => 'varchar',
      'length' => 255,
      'not null' => FALSE,
    ),
  ),
  'bundles' => array(
    'og_membership' => array(
      'og_membership_type_default',
    ),
  ),
));
}

function likeabee_import_instances() {

field_create_instance(array(
  'label' => 'Request message',
  'description' => 'This is the text a user may send to the group administrators.',
  'required' => FALSE,
  'settings' => array(
    'text_processing' => 0,
    'user_register_form' => FALSE,
  ),
  'display' => array(
    'default' => array(
      'label' => 'above',
      'type' => 'text_default',
      'settings' => array(),
      'module' => 'text',
      'weight' => 0,
    ),
  ),
  'widget' => array(
    'type' => 'text_textarea',
    'settings' => array(
      'rows' => 5,
    ),
    'weight' => 0,
    'module' => 'text',
  ),
  'field_name' => 'og_membership_request',
  'entity_type' => 'og_membership',
  'bundle' => 'og_membership_type_default',
  'deleted' => '0',
  'default_value' => NULL,
));
}

function likeabee_import_blocks() {

}

function likeabee_import_variables() {

}
function likeabee_content_types() {
  $types = array (
    'advpoll' => array(
       'type' => 'advpoll',
       'name' => 'Poll',
       'base' => 'node_content',
       'module' => 'node',
       'description' => 'Advanced Poll adds additional poll functionality, cookie voting, write-ins and voting modes.',
       'help' => '',
       'has_title' => '1',
       'title_label' => 'Question',
    ),
    'article' => array(
       'type' => 'article',
       'name' => 'כתבה',
       'base' => 'node_content',
       'module' => 'node',
       'description' => 'השתמשו ב<em>מאמרים</em> עבור תכנים תלויי זמן כמו חדשות, הודעות לעיתונות או הודעות בבלוג.',
       'help' => '',
       'has_title' => '1',
       'title_label' => 'Title',
    ),
    'book' => array(
       'type' => 'book',
       'name' => 'ספר / פרק למרכז הידע',
       'base' => 'node_content',
       'module' => 'node',
       'description' => '',
       'help' => '',
       'has_title' => '1',
       'title_label' => 'כותרת',
    ),
    'discussion' => array(
       'type' => 'discussion',
       'name' => 'Discussion',
       'base' => 'node_content',
       'module' => 'node',
       'description' => '',
       'help' => '',
       'has_title' => '1',
       'title_label' => 'Title',
    ),
    'document' => array(
       'type' => 'document',
       'name' => 'Documents',
       'base' => 'node_content',
       'module' => 'node',
       'description' => '',
       'help' => '',
       'has_title' => '1',
       'title_label' => 'Title',
    ),
    'event' => array(
       'type' => 'event',
       'name' => 'Event',
       'base' => 'node_content',
       'module' => 'node',
       'description' => '',
       'help' => 'Provides details about an event. Events can linked to several groups.',
       'has_title' => '1',
       'title_label' => 'Event Title',
       'custom' => '1',
       'modified' => '1',
       'locked' => '0',
       'disabled' => '0',
       'orig_type' => 'event_in_a_group',
       'disabled_changed' => false,
    ),
    'group' => array(
       'type' => 'group',
       'name' => 'group',
       'base' => 'node_content',
       'module' => 'node',
       'description' => '',
       'help' => '',
       'has_title' => '1',
       'title_label' => 'Group Name',
    ),
    'page' => array(
       'type' => 'page',
       'name' => 'דף בסיסי',
       'base' => 'node_content',
       'module' => 'node',
       'description' => 'אפשר להשתמש ב<em>עמוד בסיסי</em> עבור תוכן סטטי, למשל עמוד ה\'אודות\' .',
       'help' => '',
       'has_title' => '1',
       'title_label' => 'Title',
       'custom' => '1',
    ),
    'video' => array(
       'type' => 'video',
       'name' => 'Video',
       'base' => 'node_content',
       'module' => 'node',
       'description' => '',
       'help' => '',
       'has_title' => '1',
       'title_label' => 'Title',
       'custom' => '1',
    ),
  );

  foreach ($types as $type) {
    $type = node_type_set_defaults($type);
    node_type_save($type);
    //more settings for the content types which work in groups
    if (in_array($type->type, array('page', 'article', 'event', 'advpoll', 'discussion', 'group'))) {
      node_add_body_field($type, t('Body'));
      variable_set('og_group_content_type_'.$type->type, TRUE);
    }
  }
}


function likeabee_misc_setup() {
  variable_set('site_frontpage', "home");
  //there are no links in the footer menu as yet
  menu_save(array('title' => 'Footer menu', 'description' => 'secondary menu', 'menu_name' => 'footer-menu'));
  menu_save(array('title' => 'Share icons', 'description' => 'series of icons for crossposting to other sites', 'menu_name' => 'share-icons'));
  $items = array(
    'fb' => array(
      'link_path' => 'https://www.facebook.com/pages/%D7%94%D7%9B%D7%95%D7%95%D7%A8%D7%AA/255386507852131?success=1',
      'link_title' => 'fb',
      'menu_name' => 'share-icons',
      'weight' => 1
    ),
    'twit' => array(
      'link_path' => '',
      'link_title' => 'twit',
      'menu_name' => 'share-icons',
      'weight' => 2
    ),
    'rss' => array(
      'link_path' => '',
      'link_title' => 'twit',
      'menu_name' => 'share-icons',
      'weight' => 2
    ),
    'yt' =>array(
      'link_path' => 'http://www.youtube.com/user/hakaveret',
      'link_title' => 'twit',
      'menu_name' => 'share-icons',
      'weight' => 2
    )
  );
  foreach ($items as $item) {
    menu_link_save($item);
  }

  variable_set('menu_secondary_links_source', 'footer-menu');
  variable_set('menu_main_links_source', '');
  variable_set('theme_default', 'beezy');


  variable_set('menu_block_ids', array(MENU_BLOCK_MAIN_MENU_ICONS, MENU_BLOCK_SECTION));
  //we use menu block to provide the top level of the main-menu, which is usually represented as icons
  menu_block_block_save(MENU_BLOCK_MAIN_MENU_ICONS, array(
    'title_link' => 0,
    'admin_title' => 'Section icons - top level of main menu front page only',
    'parent' => 'main-menu:0',
    'level' => 1,
    'follow' => 0,
    'depth' => 1,
    'expanded' => 0,
    'sort' => 0
  ));
  //we use menu block to provide the top level of the main-menu, which is usually represented as icons
  menu_block_block_save(MENU_BLOCK_SECTION, array(
    'title_link' => 0,
    'admin_title' => 'subheadings for sections',
    'parent' => 'main-menu:0',
    'level' => 2,
    'follow' => 0,
    'depth' => 1,
    'expanded' => 0,
    'sort' => 0
  ));

  variable_set('user_pictures', 1);
  variable_set('user_picture_default', 'profiles/likeabee/themes/beezy/images/picture.jpg');
  variable_set('user_picture_dimensions', '1024x1024');
  variable_set('user_picture_file_size', '800');
  variable_set('user_picture_guidelines', '');
  variable_set('user_picture_path', 'pictures');
  variable_set('user_picture_style', 'medium');
  variable_set('user_register', '1');
  variable_set('user_signatures', 0);

  //testing this
  variable_set('og_group_content_type_event', TRUE);


  //organic groups memberships types
  //status The exportable status of the entity.	module The name of the providing module if the entity has been defined in code.	language
  $row = array(
    'id' => 1,//this is the primary key
    'name' => 'og_membership_type_default',
    'description' => 'Default',
    'status' => 2,
    'module' => 'og'
  );
  drupal_write_record('og_membership_type', $row);

}
