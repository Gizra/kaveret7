<?php
// $Id:

/**
 * Implementation of hook_install().
 */
function cforge_docs_install() {
  //oops this might be a bad idea
  variable_set('file_private_path', variable_get('file_public_path'));
//  variable_set('file_default_scheme', 'private');
  db_query(
    "UPDATE {system} set weight = :weight WHERE name = 'cforge_docs'", array(
      ':weight' => db_query("SELECT weight from {system} WHERE name = 'upload'")->fetchField()+1
    )
  );

  $vocab = (object)array(
    'name' => st('Document shelves'),
    'machine_name' => 'cforge_docs_categories',
    'module' => 'cforge_docs',
    'help' => st('Choose a category to make this page appear on the documents page'),
    'description' => st("This vocabulary is for categorising activities people do in their community. It can be used like the 'yellow pages' to help locate goods and services, but can also be used later on, for monitoring purposes."),
  );
  taxonomy_vocabulary_save($vocab);

  $terms = array(
    t('Our LETS') => t('Documents associated with this group'),
    t('Media coverage') => t('Press, media and internet exposure.'),
    t('Publicity materials') => t('Leaflets, posters etc.'),
    t('Minutes') => t('Create your meeting agenda, and after the meeting edit the agenda so it can be viewed as minutes'),
    t('Misc') =>  t('Anything else')
  );
  $w = 0;
  foreach ($terms as $name => $description) {
    $term = array(
      'vid' => taxonomy_vocabulary_machine_name_load('cforge_docs_categories')->vid,
      'name' => $name,
      'description' => $description,
      'weight' => $w++
    );
    taxonomy_term_save((object) $term);
  }

  cforge_docs_checkfields();

  $link = l('admin/structure/taxonomy/cforge_docs_categories', 'admin/structure/taxonomy/cforge_docs_categories/add');
  drupal_set_message(t('Now go and make some doc categories at !link', array('!link' => $link)), 'warning');
  variable_set('node_options_document', array('status'));
  variable_set('node_permissions_document', 0);
}

/*
 * implement cforge hook_cf_role_permissions
 */
function cforge_docs_cf_role_permissions() {
  return array(
    DRUPAL_ANONYMOUS_RID =>  array('view non-private documents'),
    DRUPAL_AUTHENTICATED_RID =>  array('view non-private documents'),
    RID_TRADER =>  array('view private documents'),
    RID_COMMITTEE =>  array('edit documents'),
  );
}

/**
 * implements hook_update_n
 */
function cforge_docs_update_7000() {
  module_enable(array('file', 'views'));
  //it seems that the cf_docs_vid variable may be incorrect, so we'll retrieve it from elsewhere
  variable_del('cf_docs_vid');
  variable_del('cf_docs_menu');
  db_delete('menu_links')->condition('link_path', 'docs')->execute();
  global $language;
  cache_clear_all('views_block_items:'.$language->language, 'cache_views');
  if ($view = views_get_view('documents')) {
    views_delete_view($view);
  }
}

function cforge_docs_checkfields() {
  $field_name = 'cforge_docs_categories';
  $field = current(_update_7000_field_read_fields(array('field_name' => $field_name)));
  if (empty($field)) {
    $field = array(
      'field_name' => $field_name,
      'type' => 'taxonomy_term_reference',
      'entity_types' => array('node'),
      'module' => 'taxonomy',
      'cardinality' => 1,
      'columns' => array(
        'tid' => array(
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => FALSE,
        )
      ),
      'indexes' => array(
        'tid' => array(
          'tid'
        )
      ),
      'foreign keys' => array(
        'tid' => array(
          'table' => 'taxonomy_term_data',
          'columns' => array(
            'tid'
          )
        )
      ),
      'settings' => array(
        'allowed_values' => array(
          array(
            'vocabulary' => 'cforge_docs_categories',
            'parent' => '0',
          )
        )
      ),
      'bundles' => array(
        'node' => array(
          'document',
        )
      )
    );
    _update_7000_field_create_field($field);
  }
  if (!field_read_instance('node', $field_name, 'document', array('include_inactive' => TRUE))) {
    $instance = array(
      'label' => t('Document category'),
      'description' => '',
      'field_name' => $field_name,
      'entity_type' => 'node',
      'bundle' => 'document',
      'settings' => array(
        'text_processing' => 0,
        'allowed_values' => array(
          array(
            'vocabulary' => 'cforge_docs_categories'
          )
        )
      ),
      'required' => TRUE,
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'text_default',
          'weight' => -3,
        )
      ),
      'widget' => array(
        'type' => 'options_select',
      )
    );
    _update_7000_field_create_instance($field, $instance);
  }

  //upload field is provided by the cforge installation profile
  $field_name = 'upload';
  if (!field_info_instance('node', $field_name, 'page', array('include_inactive' => TRUE))) {
    $instance = array(
      'label' => 'File attachments',
      'widget' => array(
        'weight' => 1,
        'type' => 'file_generic',
        'module' => 'file',
        'active' => 1,
      ),
      'settings' => array(
        'file_directory' => '',
        'file_extensions' => 'txt pdf doc xls odt csv htm ppt',
        'max_filesize' => '2MB',
        'description_field' => 0,
        'user_register_form' => FALSE,
      ),
      'display' => array(
        'default' => array(
          'label' => 'above',
          'type' => 'file_default',
          'settings' => array(),
          'module' => 'file',
          'weight' => -2,
        )
      ),
      'required' => 1,
      'description' => '',
      'field_name' => $field_name,
      'entity_type' => 'node',
      'bundle' => 'document',
    );
    field_create_instance($instance);
  }

  node_types_rebuild();
  $types = _update_7000_node_get_types();
  cforge_add_body_field('node', 'document', t('Content or synopsis of attached'));

  //alter the filter settings on the body field
  $instance = field_info_instance('node', 'body', 'document');
  $instance['settings']['text_processing'] = 0;
  field_update_instance($instance);
}


/**
 * Implementation of hook_uninstall().
 */
function cforge_docs_uninstall() {
  //remove the vocab
  $vid = db_query("SELECT vid FROM {taxonomy_vocabulary} WHERE machine_name = 'cforge_docs_categories'")->fetchField();
  taxonomy_vocabulary_delete($vid);
  field_delete_field('cforge_docs_categories');
  field_purge_batch(1);
  node_type_delete('document');
  variable_del('node_options_document');
  variable_del('node_permissions_document');
}
