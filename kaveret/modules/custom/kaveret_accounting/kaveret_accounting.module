<?php

/**
 * @file
 */

include_once 'kaveret_accounting.features.inc';

/**
 * Implements hook_ctools_plugin_directory().
 */
function kaveret_accounting_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools') {
    return 'plugins/' . $plugin;
  }
}

/**
 * Implements hook_views_data().
 */
function kaveret_accounting_views_data() {
  $data['mcapi_transactions']['description'] = array(
    'title' => t('Description'),
    'help' => t('Display a description of a transaction.'),
    'real field' => 'xid',
    'field' => array(
      'handler' => 'kaveret_accounting_transaction_description',
    ),
  );
  return $data;
}

/**
 * Implements hook_mcapiforms_default_alter().
 */
function kaveret_accounting_mcapiforms_default_alter($forms) {
  $forms['1stparty']->data['direction']['widget'] = 'radios';
}

/**
 * Implements hook_mcapicurrencies_default().
 *
 * Create the Bees currency.
 */
function kaveret_accounting_mcapicurrencies_default_alter(&$currencies) {
  $mcapicurrency = new stdClass();
  $mcapicurrency->disabled = FALSE; /* Edit this to true to make a default mcapicurrency disabled initially */
  $mcapicurrency->api_version = 3;
  $mcapicurrency->currcode = 'bz';
  $mcapicurrency->data = (object) array(
    'info' => array(
      'currcode' => 'bz',
    ),
    'human_name' => 'Bees',
    'issuance' => 'acknowledgement',
    'uid' => '1',
    'reservoir' => '1',
    'display' => array(
      'divisions' => '0',
      'delimiter' => ':',
      'divisions_setting' => '0|/.
25|1/4
50|1/2
75|3/4',
      'format' => '<span class="code">BZ</span> <span class="quantity">[quantity]</span>',
      'zero' => '',
    ),
    'additional_settings' => array(
      'additional_settings__active_tab' => 'edit-access-operations',
    ),
    'access' => array(
      'membership' => 'user_chooser_segment_perms:transact',
      'trader_data' => 'user_chooser_segment_perms:transact',
      'system_data' => 'user_chooser_segment_perms:transact',
    ),
    'view_transaction_states' => array(
      1 => array(
        'transaction_access_callback_perm_transact' => 'transaction_access_callback_perm_transact',
        'transaction_access_callback_perm_manage_all' => 'transaction_access_callback_perm_manage_all',
        'transaction_access_callback_payee' => 0,
        'transaction_access_callback_payer' => 0,
        'transaction_access_callback_open' => 0,
        'transaction_access_callback_creator' => 0,
        'transaction_access_callback_signatory' => 0,
        'transaction_access_callback_pending_signatory' => 0,
      ),
      0 => array(
        'transaction_access_callback_perm_transact' => 0,
        'transaction_access_callback_perm_manage_all' => 0,
        'transaction_access_callback_payee' => 0,
        'transaction_access_callback_payer' => 0,
        'transaction_access_callback_open' => 0,
        'transaction_access_callback_creator' => 0,
        'transaction_access_callback_signatory' => 0,
        'transaction_access_callback_pending_signatory' => 0,
      ),
      -1 => array(
        'transaction_access_callback_perm_manage_all' => 'transaction_access_callback_perm_manage_all',
        'transaction_access_callback_signatory' => 'transaction_access_callback_signatory',
        'transaction_access_callback_perm_transact' => 0,
        'transaction_access_callback_payee' => 0,
        'transaction_access_callback_payer' => 0,
        'transaction_access_callback_open' => 0,
        'transaction_access_callback_creator' => 0,
        'transaction_access_callback_pending_signatory' => 0,
      ),
    ),
    'access_operations' => array(
      'undo' => array(
        'transaction_access_callback_perm_manage_all' => 'transaction_access_callback_perm_manage_all',
        'transaction_access_callback_perm_transact' => 0,
        'transaction_access_callback_payee' => 0,
        'transaction_access_callback_payer' => 0,
        'transaction_access_callback_open' => 0,
        'transaction_access_callback_creator' => 0,
        'transaction_access_callback_signatory' => 0,
        'transaction_access_callback_pending_signatory' => 0,
      ),
      'sign' => array(
        'transaction_access_callback_payee' => 'transaction_access_callback_payee',
        'transaction_access_callback_payer' => 'transaction_access_callback_payer',
        'transaction_access_callback_perm_transact' => 0,
        'transaction_access_callback_perm_manage_all' => 0,
        'transaction_access_callback_open' => 0,
        'transaction_access_callback_creator' => 0,
        'transaction_access_callback_signatory' => 0,
        'transaction_access_callback_pending_signatory' => 0,
      ),
      'undo_pending' => array(
        'transaction_access_callback_perm_transact' => 0,
        'transaction_access_callback_perm_manage_all' => 0,
        'transaction_access_callback_payee' => 0,
        'transaction_access_callback_payer' => 0,
        'transaction_access_callback_open' => 0,
        'transaction_access_callback_creator' => 0,
        'transaction_access_callback_signatory' => 0,
        'transaction_access_callback_pending_signatory' => 0,
      ),
      'signoff' => array(
        'transaction_access_callback_perm_transact' => 0,
        'transaction_access_callback_perm_manage_all' => 0,
        'transaction_access_callback_payee' => 0,
        'transaction_access_callback_payer' => 0,
        'transaction_access_callback_open' => 0,
        'transaction_access_callback_creator' => 0,
        'transaction_access_callback_signatory' => 0,
        'transaction_access_callback_pending_signatory' => 0,
      ),
    ),
    'buttons' => array(
      'delete' => 'Revert',
    ),
    'limits' => array(
      'limits_callback' => 'limits_global',
      'limits_global' => array(
        'min' => '-500',
        'max' => '',
      ),
      'personal' => 0,
      'skip' => array(
        'auto' => 'auto',
        'reservoir' => 'reservoir',
        'mass' => 0,
        'user1' => 0,
        'owner' => 0,
      ),
    ),
  );

  // Override the other default currencies.
  $currencies = array($mcapicurrency->currcode => $mcapicurrency);
  return $currencies;
}
