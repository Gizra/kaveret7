<?php

define('MENU_BLOCK_MAIN_MENU_LEV1', 1);
define('MENU_BLOCK_MAIN_MENU_LEV2', 2);

function likeabee_help($path, $args) {
  if (substr($path, 0, 4) == 'user' && count(array_filter($args)) < 3) {
    return 'The accounting info on this page is duplicated in the resources section. This page needs theming. See user-profile.tpl.php';
  }
}

function likeabee_menu() {
  //just make a callback for the home page
  $items['home'] = array(
    'title' => 'temp home',
    'page callback' => 'temp_home',
    'access arguments' => array('access content')
  );
  return $items;
}

function likeabee_menu_alter(&$items) {
  $items['admin/content']['menu_name'] = 'localadmin';
  $items['admin/people']['menu_name'] = 'localadmin';
  $items['admin/config/system/backup_migrate/export']['menu_name'] = 'localadmin';
  $items['offers']['menu_name'] = 'community';//could be done in views_alter
  $items['wants']['menu_name'] = 'community';//could be done in views_alter
  $items['news']['menu_name'] = 'community';//could be done in views_alter
  $items['galleries']['menu_name'] = 'community';
  $items['docs']['menu_name'] = 'community';//could be done in views_alter
  $items['events-all']['menu_name'] = 'community';//could be done in views_alter
  $items['members']['menu_name'] = 'community'; //could be done in views_alter
}

function likeabee_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'likeabee'),
  );
}


/*
 * implements hook_theme
 */
function likeabee_theme() {
  $items = array(
    'likeabee_content_summary' => array(
      'variables' => array(
        'title' => '',
        'type' => '',
        'view' => '',
        'gid' => NULL
      ),
    ),
  );
  return $items;
}


/*
 * implements hook_block_view
 * put the menu blocks in place
 */
function likeabee_block_view_alter(&$build, $block) {
  if ($block->module == 'cforge') $build = array();
}

function likeabee_block_info_alter($blocks, $theme) {
  unset($blocks['cforge']);
}


function temp_home() {
  $output = likeabee_content_summary('blah', 'event');
//  $output = array('#markup' => 'blah');
  return $output;
}

function likeabee_node_view_alter(&$build, $node) {
  if ($build['#bundle'] != 'group') return; //this is needed to prevent nesting because group summary invokes a view with nodes in
  $build['section_chooser']['#weight'] = -1;
  $build['events'] = likeabee_content_summary(t("Group's events"), 'event');
  $build['poll'] = likeabee_content_summary(t("Group's polls"), 'poll');
  $build['video'] = likeabee_content_summary(t("Group's videos"), 'video');
  $build['discussion'] = likeabee_content_summary(t("Group's discussions"), 'discussion');
  $build['documents'] = likeabee_content_summary(t("Group's documents"), 'document');
}


function likeabee_content_summary($title, $type, $gid = NULL) {
  static $w = 1;
  $view = views_embed_view('content_preview', 'choice', $type, $gid);
  //there's no proper way to ascertain if a view is empty after it is themed
  if (strlen($view) < 200) return array();
  return array(
    '#theme' => 'likeabee_content_summary',
    '#title' => $title,
    '#type' => $type,
    '#view' => $view,
    '#gid' => $gid,
    '#weight' => $w++,
  );
}

function theme_likeabee_content_summary($variables) {
  debug($variables);
  static $flip = 'even';
  $type = &$variables['type'];
  $flip = $flip == 'even' ? 'odd' : 'even';
  $output[] = "<div class = \"content-summary-$type $flip\" ><h2>".$variables['title'].'</h2>';
  //we need a consistent name for the 'all display'
  $output[] = '<div class = "link-all">'. l('See All', "content/summary/$type/". $variables['gid']) . '</div>';
  $output[] = $variables['view'];
  return implode("\n", $output) .'</div><!--End group summary-->';
  debug($output);
}



/*
 * implements flag hook_flag_default_flags
 */
function likeabee_flag_default_flags() {
  // Exported flag: "Join the event".
  $flags['join_event'] = array(
    'content_type' => 'node',
    'title' => 'Join the event',
    'global' => '0',
    'types' => array(
      0 => 'groups_event',
    ),
    'flag_short' => 'Join The Event',
    'flag_long' => '',
    'flag_message' => 'Join The Event',
    'unflag_short' => 'Leave The Event',
    'unflag_long' => '',
    'unflag_message' => '',
    'unflag_denied_text' => '',
    'link_type' => 'toggle',
    'roles' => array(
      'flag' => array(
        0 => '2',
      ),
      'unflag' => array(
        0 => '2',
      ),
    ),
    'weight' => 0,
    'show_on_form' => 0,
    'access_author' => '',
    'show_on_page' => 0,
    'show_on_teaser' => 0,
    'show_contextual_link' => 0,
    'i18n' => 0,
    'api_version' => 2,
  );

  // Exported flag: "Content Viewed".
  $flags['content_viewed'] = array(
    'content_type' => 'node',
    'title' => 'Content Viewed',
    'global' => '0',
    'types' => array(
      0 => 'discussion',
      1 => 'group_s_doccuments',
      2 => 'advpoll',
    ),
    'flag_short' => 'view',
    'flag_long' => '',
    'flag_message' => '',
    'unflag_short' => 'not view',
    'unflag_long' => '',
    'unflag_message' => '',
    'unflag_denied_text' => '',
    'link_type' => 'normal',
    'roles' => array(
      'flag' => array(
        0 => '2',
        1 => '3',
      ),
      'unflag' => array(
        0 => '2',
        1 => '3',
      ),
    ),
    'weight' => 0,
    'show_on_form' => 0,
    'access_author' => 'others',
    'show_on_page' => 0,
    'show_on_teaser' => 0,
    'show_contextual_link' => 0,
    'i18n' => 0,
    'api_version' => 2,
  );
  $flags = array();


  // Exported flag: "Share in my profile".
  $flags['share_in_my_profile'] = array(
    'content_type' => 'node',
    'title' => 'Share in my profile',
    'global' => '1',
    'types' => array(
      0 => 'discussion',
      1 => 'group_s_doccuments',
      2 => 'groups_event',
      3 => 'advpoll',
      4 => 'video',
    ),
    'flag_short' => 'Share in my profile',
    'flag_long' => '',
    'flag_message' => '',
    'unflag_short' => 'Remove from my profile',
    'unflag_long' => '',
    'unflag_message' => '',
    'unflag_denied_text' => '',
    'link_type' => 'toggle',
    'roles' => array(
      'flag' => array(
        0 => '2',
      ),
      'unflag' => array(
        0 => '2',
      ),
    ),
    'weight' => 0,
    'show_on_form' => 0,
    'access_author' => '',
    'show_on_page' => 1,
    'show_on_teaser' => 0,
    'show_contextual_link' => 0,
    'i18n' => 0,
    'api_version' => 2,
  );

  // Exported flag: "Editor's choice".
  $flags['editor_choice'] = array(
    'content_type' => 'node',
    'title' => t("Editor's choice"),
    'global' => '1',
    'types' => array(
//TODO need to check these type_names
      0 => 'discussion',
      1 => 'document',
      2 => 'event',
      4 => 'video',
      4 => 'image',
    ),
    'flag_short' => t("Editor's choice"),
    'flag_long' => '',
    'flag_message' => '',
    'unflag_short' => t('Un-choose'),
    'unflag_long' => '',
    'unflag_message' => '',
    'unflag_denied_text' => '',
    'link_type' => 'toggle',
    'roles' => array(
      'flag' => array(
        0 => '2',
      ),
      'unflag' => array(
        0 => '2',
      ),
    ),
    'weight' => 0,
    'show_on_form' => 0,
    'access_author' => '',
    'show_on_page' => 1,
    'show_on_teaser' => 0,
    'show_contextual_link' => 0,
    'i18n' => 0,
    'api_version' => 2,
  );
  return $flags;

}