<?php

/*
 * This module is discontinued and the whole approach of defining sections with a hook
 * because the theme is all intertwined with the menu system already
 * and I'm not here to re-engineer the whole site.
 */

/*
 * implements hook_menu
 */
function likeabee_menu() {
  /*
  $items['content/groups'] = array(
    'title' => "Groups",
    'page callback' => 'views_embed_view',
    'page arguments' => array('list_of_groups', 'block'),
    'access callback' => TRUE,
    'access arguments' => array('access content'),
    'weight' => 1
  );
  return $items;
*/
}

function likeabee_menu_alter(&$items) {
  //this link should override /groups
  $items['content/groups']['page callback'] = 'views_embed_view';
  $items['content/groups']['page arguments'] = array('list_of_groups', 'block');

}
function likeabee_hook_info() {
  return array(
    'likeabee_section' => array()
  );
}

/*
 * implements hook_likeabee_section
 */
function likeabee_likeabee_section() {
  return array(
    'resources' => array(//this is the path to the section
      'title' => 'Resources',//this will be translated later
      'icon' => ''
    )
  );
}

function likeabee_node_view_alter(&$build, $node) {
  if ($build['#bundle'] != 'group') return; //this is needed to prevent nesting because group summary invokes a view with nodes in
  $build['section_chooser'] = module_invoke('menu_block', 'block_view', 'menu_block_3');//menu_block_3 should be a CONSTANT
  $build['section_chooser']['#weight'] = -1;
  $build['events'] = group_summary(t("Group's events"), 'event');
  $build['poll'] = group_summary(t("Group's polls"), 'poll');
  $build['video'] = group_summary(t("Group's videos"), 'video');
  $build['discussion'] = group_summary(t("Group's discussions"), 'discussion');
  $build['documents'] = group_summary(t("Group's documents"), 'document');
}

function group_summary($title, $type) {
  static $w = 1;
  $view = views_embed_view('groups_content_preview', 'groups_choice', $type, 161);
  //there's no proper way to ascertain if a view is empty after it is themed
  if (strlen($view) < 200) return array();
  return array(
    '#theme' => 'likeabee_groups_summary',
    '#weight' => $w++,
    '#title' => $title,
    '#type' => $type,
    '#view' => $view,
    '#gid' => 161
  );
}

function likeabee_theme() {
  $items['likeabee_groups_summary'] = array(
    'variables' => array(
      'title' => '',
      'type' => '',
      'view' => '',
      'gid' => 0
    )
  );
  return $items;
}
function theme_likeabee_groups_summary($variables) {
  static $flip = 'even';
  $type = &$variables['type'];
  $flip = $flip == 'even' ? 'odd' : 'even';
  $output[] = "<div class = \"group-summary-$type $flip\" ><h2>".$variables['title'].'</h2>';
  $output[] = '<div class = "link-all">'. l('See All', "content/group/$type/". $variables['gid']) . '</div>';//we need a consistent name for the 'all display'
  $output[] = $variables['view'];
  return implode("\n", $output) .'</div><!--End group summary-->';
}

function likeabee_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'likeabee'),
  );
}

variable_set('file_public_path', 'sites/likeabee.net/files');

function likeabee_block_info() {
  $blocks['group_manage'] = array(
    'info' => t('Group management')
  );
  return $blocks;
}

/*|
 * groups menu isn't a real menu because it would have to contain aliases and tricky things like that.
 * easier just to render a nested list and put it in a block.
 */
function get_groups_menu() {
  //borrowed from og_extras_node_links
  $group = og_context(); //dependency on og_context
  $gid = $group['gid'];
  $types = array();
  foreach (node_type_get_types() as $type) {
    if (og_is_group_content_type('node', $type->type)) {
      $types[$type->type] = $type->type;
    }
  }
  $options = array('query' => array('destination' => current_path()));

  $items[] = l(t('Information Read and watch'), "node/$gid", $options);
  $items[] = l(t('Activity Group Activities'), 'activity/activities-my-group', $options);
  $items[] = l(t('Group Members'), 'members/members-my-group', $options);
  $items[] = array(
    'children' => array(
      array('data' => l(t('Edit group'), "node/$gid/edit", $options)),
      array('data' => l(t('Permissions'), "group/node/$gid/admin/permissions", $options)),
      array('data' => l(t('Membership'), "group/node/$gid/admin/people", $options)),
    )
  );
  $items[] = drupal_render(og_node_create_links($group['group_type'], $group['gid'], OG_AUDIENCE_FIELD, NULL, $types));
  $element['og_node_create_links'] = array(
    '#theme' => 'item_list',
    '#title' => 'my_group',
    '#items' => $items,
  );
  return $element;
}